<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<!-- Userè¡¨ -->
<mapper namespace="dao.UserMapper">  
    <select id="findUserById" parameterType="Integer" resultType="pojo.User">
  		select *from user where id = #{id};
    </select>
    <select id="findUserByName" parameterType="String" resultType="pojo.User">
  		select *from user where name = #{name}
    </select>
    <select id="findUserByEmail" parameterType="String" resultType="pojo.User">
  		select *from user where email = #{email}
    </select>
    <select id="findUserByRole" parameterType="Integer" resultType="pojo.User">
        select *from user where role = #{role}
    </select>
    <select id="findAllUsers" resultType="pojo.User">
  		select *from user
    </select>
    <select id="findAllUsersExcludeRole" parameterType="Integer" resultType="pojo.User">
  		select *from user where role != #{role}
    </select>
    <select id="findUserQuantity"  resultType="Integer">
        select count(*)from user
    </select>

    <insert id="insertUser" parameterType="pojo.User">
        insert into user(name ,password, email, role, createTime)
        values (#{name}, #{password}, #{email}, #{role}, #{createTime})
    </insert>

    <update id="updateUserRoleById" parameterType="pojo.User">
        update user set role = #{role} where id = #{id}
    </update>
    <update id="updateUserPasswordById" parameterType="pojo.User">
        update user set password = #{password} where id = #{id}
    </update>

    <delete id="deleteUserById" parameterType="Integer">
        delete from user where id = #{id}
    </delete>
</mapper>